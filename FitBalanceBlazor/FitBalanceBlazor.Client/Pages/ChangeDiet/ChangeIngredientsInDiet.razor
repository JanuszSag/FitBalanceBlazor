@page "/changeDiet/changeIngredientsInDiet"
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@using FitBalanceBlazor.Models
@inject HttpClient Http

<PageTitle>Change ingredients in diet</PageTitle>
<MudText Align="Align.Center" Typo="Typo.h1" Style="text-transform: uppercase;"><strong>zmiana diety</strong></MudText>

<MudGrid>
    <MudItem xs="6">
        <MudStack Spacing="3">
            <!-- Sekcja wyswietlenia wczesniej wybranej pozycji(śniadanie, drugie śniadanie, obiad, podwieczorek, kolacja) do zmiany -->
            <MudPaper Class="pa-3" Style="width:100%;background:rgb(223,243,156);border-radius: 20px;">
                <MudText Typo="Typo.h6">Dieta do zmiany:</MudText>
                @* <MudText Typo="Typo.h6"> Danie :@SelectedOption</MudText> <!-- danie wybrana z popczedniech stron -WSTAWIC--> *@
            </MudPaper>

            <!-- Sekcja wyboru składników-->
            @* <MudTable Items="@produkty"> *@
            <MudPaper Class="pa-3" Style="width:100%;background:rgb(223,243,156);border-radius: 20px;">
                <MudText Typo="Typo.subtitle1" Class="mud-width-full">@(selectedProdukt == null ? "Nic nie wybrano" : $"Składnik: {selectedProdukt.nazwa}")</MudText>

                 <MudSelect @bind-Value="selectedProdukt" Label="Wybierz składnik"> @* AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined" Clearable*@
                    <MudStack>
                    @* @foreach (var produkt in produkty) *@
                    @* { *@
                    @*     <MudSelectItem Value="produkt">@produkt.nazwa</MudSelectItem> *@
                    @* } *@
                    </MudStack>

                 </MudSelect> 
                <div class="d-flex align-center">
                    <MudButton Variant="Variant.Filled" Style="width: 150px;background:rgb(255,152,107);border-radius: 20px;"
                               Href="">Zatwierdź</MudButton><!-- gdzie nas to przenosi?-->
                </div>
            </MudPaper>
                @* </MudTable> *@
        </MudStack>
    </MudItem>


    <!-- Sekcja grafiki -->
    <MudItem xs="6">
        <MudCard Style="width:100%; position: relative;">
            <MudCardMedia Image="https://img.freepik.com/free-photo/top-view-recipe-book-still-life-concept_23-2149056014.jpg?t=st=1729142774~exp=1729146374~hmac=b03517ce1aadb0443708c36b9ea8e6d86b00a050e689d91cd3858ab0dd68f6c9&w=1060" Height="500" />

        </MudCard>
    </MudItem>
</MudGrid>



@code {
    private string SelectedOption;

    //Metoda nadpisania, która jest wywoływana po zainicjowaniu komponentu.
    //OnInitialized()-Używana jest do wykonania operacji inicjalizacyjnych, takich jak pobieranie danych.
    protected override void OnInitialized()
    {
        //nowa instacja uri, która reprezentuje aktualny URL
        var uri = new Uri(NavigationManager.Uri);
        //System.Web.HttpUtility-analizuje ciąg zapytania części URL po znaku "?" i zwraca kolekcję par klucz-wartość.
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        
        SelectedOption = query["SelectedOption"];
    }

    //Wyciąganie z bazy 
    private List<Produkt> produkty;
    private Produkt selectedProdukt;

    protected override async Task OnInitializedAsync()
    {
        produkty = await Http.GetFromJsonAsync<List<Produkt>>("api/Product");
    }
    
}