@page "/changeCertainMeal"
@using MudBlazor
@inject HttpClient Http
@inject NavigationManager NavigationManager

<p>Dialog state: @isDialogVisible</p>
<PageTitle>Zmiana Dania</PageTitle>


<MudText Align="Align.Center" Typo="Typo.h1" Style="text-transform: uppercase; font-weight: bold;">Zmiana Dania</MudText>

<MudGrid Class="mt-5">
  
    <MudItem xs="12">
        <MudPaper Class="pa-4" Style="background-color: #E0FFB3; border-radius: 20px;">
            <MudText Typo="Typo.h6" Style="font-weight: bold;">
                Twoje przypisane danie: @CurrentMeal
            </MudText>
        </MudPaper>
    </MudItem>
    
    <MudItem xs="12" Class="mt-4">
        <MudPaper Class="pa-4" Style="background-color: #E0FFB3; border-radius: 20px;">
            <MudText Typo="Typo.h6" Style="font-weight: bold;">Możliwa zamiana ze względu na zapotrzebowanie kaloryczne:</MudText>

            
            <MudRadioGroup @bind-Value="SelectedOption" Class="mt-3">
                @if (AvailableMeals != null && AvailableMeals.Any())
                {
                    @foreach (var meal in AvailableMeals)
                    {
                        <MudRadio Value="@meal.nazwa">@meal.nazwa</MudRadio>
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Error">Brak dostępnych dań.</MudText>
                }
            </MudRadioGroup>

           
            <MudButton Variant="Variant.Filled" Color="Color.Primary"
                       Style="background-color: #FF986B; border-radius: 20px; margin-top: 20px;"
                       OnClick="SubmitChange">
                ZATWIERDŹ
            </MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>

<MudDialog @bind-IsVisible="isDialogVisible" MaxWidth="MaxWidth.Small">
    <DialogContent>
        <MudText Typo="Typo.h6" Align="Align.Center" Style="font-weight: bold;">
            Twoje danie zostało zmienione!
        </MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CloseDialog" Variant="Variant.Filled" Style="background-color: #FF986B;">
            OK
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    private List<Danie> AvailableMeals = new(); 
    private string SelectedOption { get; set; } 
    private string CurrentMeal { get; set; } = "Brak dania"; //teraz nie mozna tego zmienic skoro nie mamy uzytkownika
    private bool isDialogVisible = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var allMeals = await Http.GetFromJsonAsync<List<Danie>>("api/Meal");

            if (allMeals != null && allMeals.Any())
            {
                
                var random = new Random();
                AvailableMeals = allMeals.OrderBy(x => random.Next()).Take(5).ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Nie udalo sie pobrac dane {ex.Message}");
        }
    }
    
    
    private void SubmitChange()
    {
        isDialogVisible = true;
        Console.WriteLine($"Wybrano: {SelectedOption}");
        
    }
    
    private void CloseDialog()
    {
        isDialogVisible = false; 
        NavigationManager.NavigateTo("/myDiet"); 
    }
}
