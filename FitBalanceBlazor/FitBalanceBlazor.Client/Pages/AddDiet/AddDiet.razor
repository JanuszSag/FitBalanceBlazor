@using System.ComponentModel.DataAnnotations

@page "/addDiet"
<PageTitle>Add diet</PageTitle>
<MudText Align="Align.Center" Typo="Typo.h1" Style="text-transform: uppercase;"><strong>dodawanie diety</strong></MudText>

<EditForm Model="@modelAddDiet" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem xs="6">
            <MudCard Class="pa-3" Style="width:100%;background:rgb(223,243,156);border-radius: 20px;">
                <MudCardContent>
                    <!-- Sekcja dodawanie nazwy nowej diety -->
                    <MudText Typo="Typo.h6">Nazwa diety</MudText>
                    <MudTextField @bind-Value="modelAddDiet.DietName" Label="Wpisz nazwę diety"
                                  For="@(() => modelAddDiet.DietName)"
                                  Required="true" RequiredError="Należy wprowadzić nazwę" Variant="Variant.Text"></MudTextField>

                    <!-- Sekcja wyboru dania do dodania -->
                    <MudText Typo="Typo.h6">Która pozycję chcesz dodać?</MudText>
                    <MudRadioGroup @bind-Value="modelAddDiet.SelectedOption" >
                        <MudStack>
                            <MudRadio Value="@("Śniadanie")" Color="Color.Primary">Śniadanie</MudRadio>
                            <MudRadio Value="@("Drugie śniadanie")" Color="Color.Primary">Drugie śniadanie</MudRadio>
                            <MudRadio Value="@("Obiad")" Color="Color.Primary">Obiad</MudRadio>
                            <MudRadio Value="@("Podwieczorek")" Color="Color.Primary">Podwieczorek</MudRadio>
                            <MudRadio Value="@("Kolacja")" Color="Color.Primary">Kolacja</MudRadio>
                        </MudStack>
                    </MudRadioGroup>
                    <MudText Color="Color.Error">
                    <ValidationMessage For="@(() => modelAddDiet.SelectedOption)"Class="text-danger"></ValidationMessage>
                    </MudText>
                    
                    <div class="d-flex align-center">
                        <MudText Class="ml-4">Wybrana opcja: @modelAddDiet.SelectedOption</MudText>
                        <MudButton ButtonType="ButtonType.Submit"
                                   Variant="Variant.Filled" Style="width: 150px;background:rgb(255,152,107);border-radius: 20px;">
                            Zatwierdź
                        </MudButton>
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Sekcja grafiki -->
        <MudItem xs="6">

            <MudCard Style="width:100%; position: relative;">
                <MudCardMedia Image="https://img.freepik.com/foto-gratis/manos-chef-cortando-verduras-su-cocina_155003-42435.jpg" Height="460"/>

            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>


@code {
    //Model formularza,Klasa "AddNewDietForm" gdzie przechowywane są informację wprowadzone do formularza
    AddNewDietForm modelAddDiet = new AddNewDietForm();
    bool success;
    
    public class AddNewDietForm
    {
        //Wymagania formularza required-wymagany
        [Required(ErrorMessage = "Należy wprowadzić nazwę diety.")]
        [StringLength(20, ErrorMessage = "Nazwa powinna być ne dłuższa niż 20 znaków.")]
        public string DietName { get; set; }
        
        [Required(ErrorMessage = "Należy wybrać pozycję.")]
        public string SelectedOption { get; set; }
        
    }

    //Metoda sprawdzająca poprawnośc danych - czy nie są puste
    private bool ModelIsValid()
    {
        return !string.IsNullOrEmpty(modelAddDiet.DietName) && !string.IsNullOrEmpty(modelAddDiet.SelectedOption);
    }
    
    [Inject]//Wstrzykuje instancję NavigationManager, która umożliwia nawigację do innych stron.
    private NavigationManager NavigationManager { get; set; }
    
    //Metoda wywoływana po zatwierdzeniu poprawności formularza, przekazuje parametry do kolejnej strony
    private void OnValidSubmit(EditContext context) //EditContext to klasa w ASP.NET Core Blazor, która jest używana do zarządzania stanem i walidacją formularzy.
    {
        if (ModelIsValid())
        {
            success = true;
            NavigationManager.NavigateTo($"/addDiet/addIngredientsToNewDiet?DietName={Uri.EscapeDataString(modelAddDiet.DietName)}&SelectedOption={Uri.EscapeDataString(modelAddDiet.SelectedOption)}");

        }
        else
        {
            success = false;
        }
        StateHasChanged();
    }
    

}
