

<!--TA STRONA CHYBA JEST BEZ SENSU-->


@inject NavigationManager NavigationManager

@page "/addDiet/addIngredientsToNewDiet"

@using System.ComponentModel.DataAnnotations
@using FitBalanceBlazor.Models
@inject HttpClient Http

<PageTitle>Add ingredients to new diet</PageTitle>
<MudText Align="Align.Center" Typo="Typo.h1" Style="text-transform: uppercase;"><strong>dodawanie diety</strong></MudText>

<MudGrid>
    <MudItem xs="6">
        <MudStack Spacing="3">
            <!-- Sekcja wyswietlenia wczesniej wybranej pozycji(śniadanie, drugie śniadanie, obiad, podwieczorek, kolacja) -->
            <MudPaper Class="pa-3" Style="width:100%;background:rgb(223,243,156);border-radius: 20px;">
                <MudText Typo="Typo.h6">Nazwa diety: @DietName </MudText>
                <MudText Typo="Typo.h6">Dodawane danie:  @SelectedOption </MudText>
            </MudPaper>

            <!-- Sekcja wyboru składników-->
            <MudPaper Class="pa-3" Style="width:100%;background:rgb(223,243,156);border-radius: 20px;">

                <MudSelect @bind-Value="selectedProdukt" Label="Wybierz składnik"> @* AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined" Clearable*@
                <MudStack>
                    @foreach (var produkt in produkty)
                    {
                        <MudSelectItem Value="produkt">@produkt.nazwa</MudSelectItem>
                    }
                </MudStack>
                </MudSelect>

                <div class="d-flex align-center">
                    <MudButton Variant="Variant.Filled" Style="width: 150px;background:rgb(255,152,107);border-radius: 20px;"
                               Href="">Zatwierdź</MudButton><!-- dodanie do bazy i snakcbar(albo cos takiego) potwierdzający-->
                </div>
            </MudPaper>
        </MudStack>
    </MudItem>



    <!-- Sekcja grafiki -->
    <MudItem xs="6">
        <MudCard Style="width:100%; position: relative;">
            <MudCardMedia Image="https://img.freepik.com/free-photo/top-view-recipe-book-still-life-concept_23-2149056014.jpg?t=st=1729142774~exp=1729146374~hmac=b03517ce1aadb0443708c36b9ea8e6d86b00a050e689d91cd3858ab0dd68f6c9&w=1060" Height="500" />

        </MudCard>
    </MudItem>
</MudGrid>



@code {
    private string DietName;
    private string SelectedOption;

    //Metoda nadpisania, która jest wywoływana po zainicjowaniu komponentu.
    //OnInitialized()-Używana jest do wykonania operacji inicjalizacyjnych, takich jak pobieranie danych.
    protected override void OnInitialized()
    {
        //nowa instacja uri, która reprezentuje aktualny URL
        var uri = new Uri(NavigationManager.Uri);
        //System.Web.HttpUtility-analizuje ciąg zapytania części URL po znaku "?" i zwraca kolekcję par klucz-wartość.
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);

        DietName = query["DietName"];
        SelectedOption = query["SelectedOption"];
    }
    
    private List<Produkt> produkty=new List<Produkt>();
    private Produkt selectedProdukt;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            produkty = await Http.GetFromJsonAsync<List<Produkt>>("api/Product");
        }
        catch (Exception ex)
        {

        }
    }
    //Klasa składników
    private Ingredient ingredient;
    public class Ingredient
    {
        public string Name { get; set; }
        
        public override bool Equals(object o) {
            var other = o as Ingredient;
            return other?.Name==Name;
        }
        
        public override int GetHashCode() => Name.GetHashCode();
    }

    Func<Ingredient,string> converter = i => i?.Name;
}