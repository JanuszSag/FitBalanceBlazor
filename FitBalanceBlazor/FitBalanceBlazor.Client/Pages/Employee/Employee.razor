@page "/employee"
@using System.IdentityModel.Tokens.Jwt
@using System.Net
@using Blazored.LocalStorage
@using ClassLibrary1
@inject HttpClient Http
@inject ILocalStorageService LocalStorage

@rendermode InteractiveWebAssembly

<PageTitle>Employee</PageTitle>

<MudStack Spacing="5">
  
  <!-- Sekcja ze zdjęciem-->
  <MudCard Width="80%" Style="position: relative; margin: 0 auto; border-radius: 50px; height: 70%" >
    <MudCardMedia Image="https://img.freepik.com/darmowe-zdjecie/koncepcja-biznesowa-handshake-mezczyzn_53876-31214.jpg?t=st=1722507208~exp=1722510808~hmac=4f7a5e03497b85c37bc7d5bcab7c18dd426020b3ed24c5e75f061158722e7625&w=826" />
    <MudText Typo="Typo.h5" Class="textCenterOnImage" Style="border: 5px; border-radius:20px; position: absolute; bottom: 10%; left: 50%; transform: translateX(-50%); color: white; ">
      <strong> Witaj,@name </strong> 
    </MudText>
    </MudCard>
    

  <!-- Sekcja z opcjami, które posiada pracownik-->
  <MudText Align="Align.Center" Typo="Typo.h3" Style="text-transform: uppercase;"><strong>Twoje możliwości:</strong></MudText>
  <MudStack Spacing="20">
    <MudStack Row="true" Spacing="2" Justify="Justify.SpaceAround">
      <MudPaper Class="pa-20" Style="border: 5px solid rgb(223,243,156);border-radius: 20px;">
        Zobacz
      </MudPaper>
      <MudPaper Class="pa-20" Style="border: 5px solid rgb(223,243,156);border-radius: 20px;">
        Zmodyfikuj
      </MudPaper>
      <MudPaper Class="pa-20" Style="border: 5px solid rgb(223,243,156);border-radius: 20px;">
        Usuń
      </MudPaper>
    </MudStack>
    <MudText Align="Align.Center" Typo="Typo.h6" Style="text-transform: uppercase;">Wszytsko to zrobisz po kliknięciu, której z list:</MudText>

    <!-- Sekcja z przyciskami kierującymi na kolejne podstrony-->
    <MudStack Row="true" Spacing="2" Justify="Justify.SpaceAround">
   
      <MudPaper Class="pa-40" Style="width: 300px; height: 100px; border: 5px solid rgb(223,243,156);border-radius: 20px;">
        <MudStack AlignItems="AlignItems.Center" JustifyContent="Center" >
          Lista wszystkich diet
          <MudButton Variant="Variant.Filled" Style="width: 150px;background:rgb(255,152,107);border-radius: 20px;"
                     Href="/allClientDiets">Zobacz</MudButton>
        </MudStack>
      </MudPaper>
    
      <MudPaper Class="pa-40" Style="width: 300px; height:100px; border: 5px solid rgb(223,243,156);border-radius: 20px;">
        <MudStack AlignItems="AlignItems.Center" JustifyContent="Center">
          Lista diet gości
          <MudButton Variant="Variant.Filled" Style="width:150px; background:rgb(255,152,107);border-radius: 20px;"
                     Href="/allGuestDiets">Zobacz</MudButton>
        </MudStack>
      </MudPaper>
    </MudStack>


  </MudStack>
</MudStack>
@code {
  [Parameter] public string name { get; set; } = "Employee";
  private Uzytkownik user;
  private int totalWater = 0;
  private JwtSecurityToken jwt { get; set; }

  protected override async Task OnInitializedAsync()
  {
    try
    {
      var TokenText = await LocalStorage.GetItemAsStringAsync("authToken");
      jwt = new JwtSecurityTokenHandler().ReadJwtToken(TokenText);
      var claim = jwt.Claims.First(c => c.Type.Equals("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"));
      var userResponse = await Http.GetFromJsonAsync<ServiceResponse<Uzytkownik>>($"api/user/{claim.Value}");
      user = userResponse.Data;
      name = user.pseudonim ?? "Employee";
      StateHasChanged();

    }
    catch (Exception e)
    {
      Console.WriteLine(e);
    }
  }

}