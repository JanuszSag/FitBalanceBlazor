@page "/allClientDiets"
@using System.ComponentModel.DataAnnotations 
@using FitBalanceBlazor.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>All clients diets</PageTitle>
<MudText Align="Align.Center" Typo="Typo.h1" Style="text-transform: uppercase;"><strong>wszystkie diety</strong></MudText>

<!-- Sekcja elementów listy diet -->

<MudGrid>
    <MudItem xs="9">
        <MudTable Items="@diety">
            <RowTemplate>
                <MudPaper Class="pa-3 my-4" Style="width:100%;background:rgb(223,243,156);border-radius: 20px;">
                    <MudTd Style="text-transform: uppercase" DataLabel="Nazwa"><strong>@context.nazwa</strong></MudTd>
                    <MudStack Justify="Justify.SpaceAround">
                        <MudTd DataLabel="Opis"><MudText Typo="Typo.subtitle1">Opis: @context.opis</MudText></MudTd>
                        <MudTd DataLabel="Rodzaj"><MudText Typo="Typo.subtitle1">Rodzaj: @rodzaje.FirstOrDefault(r => r.id_rodzaj == @context.rodzaj)?.nazwa</MudText></MudTd>
                        <MudTd DataLabel="Dania">
                            <MudText Typo="Typo.subtitle1">Dania:<!--uzupelnic endpointem-->
                            </MudText>
                        </MudTd>
                    </MudStack>

                    <MudStack Row="true" Justify="Justify.SpaceAround">
                        <div class="d-flex align-center">
                            <MudButton Variant="Variant.Filled" 
                                       Style="width: 150px;background:rgb(255,152,107);border-radius: 20px;margin-right: 100px" 
                                       OnClick="() => onChangeDiet(context.id_dieta)">
                                Zmień
                            </MudButton>
                            <MudButton Variant="Variant.Filled" Style="width: 150px;background:rgb(255,152,107);border-radius: 20px;margin-left: 100px">
                                Usuń
                            </MudButton>
                        </div>
                    </MudStack>
                </MudPaper>
            </RowTemplate>
        </MudTable>

        <MudButton Variant="Variant.Filled" 
                   Style="width:300px; background:rgb(255,152,107);border-radius: 20px;" 
                   Href="/addDiet">
            Dodaj dietę
        </MudButton>
    </MudItem>
</MudGrid>

@code {
    private List<Dieta> diety;
    private List<Rodzaj> rodzaje;
    private List<Danie> dania;

    FilterForm modelFilter = new FilterForm();

    public class FilterForm
    {
        public string SelectedOption { get; set; } = "wszystkieDiety";
    }

    protected override async Task OnInitializedAsync()
    {
        // Poprawiono: Pobieranie danych z API
        diety = await Http.GetFromJsonAsync<List<Dieta>>("api/Diet");
        rodzaje = await Http.GetFromJsonAsync<List<Rodzaj>>("api/Category");
        dania = await Http.GetFromJsonAsync<List<Danie>>("api/Meal");
    }

    private void onChangeDiet(int id) // Dodano metodę do przekazywania ID diety do strony zmiany
    {
        NavigationManager.NavigateTo($"/changeDiet/{id}");
    }
}
