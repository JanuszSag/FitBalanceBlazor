@page "/informationAboutPersonalData/decisionWhatPersonalDataChange"
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@using FitBalanceBlazor.Models
@inject HttpClient Http


<PageTitle>Decision What Personal Data Change</PageTitle>
<MudText Align="Align.Center" Typo="Typo.h1" Style="text-transform: uppercase;"><strong>Zmiana danych osobowych</strong></MudText>

<MudGrid>
    <MudItem xs="6">
        <MudCard Class="pa-3" Style="width:100%;background:rgb(223,243,156);border-radius: 20px;">
            <MudCardContent>
                <!-- Sekcja opis -->
                <MudStack Spacing="5">
                    <MudText Align="Align.Left" Typo="Typo.h4"><strong>Którą informacje chcesz edytować? </strong></MudText>
                        <MudRadioGroup @bind-Value="modelChangeData.SelectedOption">
                            <MudStack>
                                @* @foreach (var danie in selectedDiet.Danie_id_danie) *@
                                @* { *@
                                @* <MudRadio Value="@danie.nazwa"> @selectedDiet.Danie_id_danie.FirstOrDefault(d=> d.id_danie == danie.id_danie)?.nazwa</MudRadio> *@
                                @* }  ZROBIĆ DLA UŻYTKOWNIKA*@
                            </MudStack>
                        </MudRadioGroup>
                </MudStack>
                <MudButton ButtonType="ButtonType.Submit"
                           Variant="Variant.Filled" Style="width: auto;background:rgb(255,152,107);border-radius: 20px;"
                           Href="/informationAboutPersonalData/decisionWhatPersonalDataChange/ChangePersonalData">
                    Zatwierdź
                </MudButton>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Sekcja grafiki -->
    <MudItem xs="6">
        <MudCard Style="width:100%; position: relative;">
            <MudImage Fluid="true" Src="/Images/PersonalData/DataImage.png" Alt="Image" Class="rounded-lg"/>
        </MudCard>
    </MudItem>
</MudGrid>
@code {
    
// Model formularza, Klasa "ChangeDataForm" gdzie przechowywane są informację wprowadzone do formularza
    ChangeDataForm modelChangeData = new ChangeDataForm();
    bool success;

    public class ChangeDataForm
    {
// Wymagania formularza required-wymagany
        [Required(ErrorMessage = "Należy wybrać opcję.")]
        public string SelectedOption { get; set; }
    }

// Metoda sprawdzająca poprawność danych - czy nie są puste
    private bool ModelIsValid()
    {
        return !string.IsNullOrEmpty(modelChangeData.SelectedOption);
    }

// Metoda wywoływana po zatwierdzeniu poprawności formularza, przekazuje parametry do kolejnej strony
    private void OnValidSubmit(EditContext context) // EditContext to klasa w ASP.NET Core Blazor, która jest używana do zarządzania stanem i walidacją formularzy.
    {
        if (ModelIsValid())
        {
            success = true;
// NavigationManager.NavigateTo($"/changeDiet/changeIngredientsInDiet?SelectedOption={Uri.EscapeDataString(modelChangeDiet.SelectedOption)}");
            NavigationManager.NavigateTo($"//informationAboutPersonalData/decisionWhatPersonalDataChange&SelectedOption={Uri.EscapeDataString(modelChangeData.SelectedOption)}");
    
        }
        else
        { 
            success = false; 
        } 
        StateHasChanged();
    }
    //Obsługa endpointów
    private List<Uzytkownik> uzytkownicy=new List<Uzytkownik>();
    
    protected override async Task OnInitializedAsync()
    { 
        try
        { 
            // uzytkownicy = await Http.GetFromJsonAsync<List<Uzytkownik>("api/");//dodac api
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Błąd podczas pobierania danych: {ex.Message}");
        }
    }

}
