@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<MudLayout>
    <MudAppBar Elevation="1">
        
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/> @*to zbedne bedzie*@
        <MudText Typo="Typo.h5" Class="ml-3">FitBalance</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle"/>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/> @*to zbedne bedzie*@

        <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2"> @*to zbedne bedzie*@
            <div class="sidebar">

                <NavMenu/>
            </div>

            <MudPaper Class="pa-2" Elevation="0">
                <MudStack Row="true" Justify="Justify.FlexStart">
                    <MudLink Href="/#sectionStarter" Style="text-transform: uppercase;">home</MudLink>
                    <MudLink Href="/#sectionAboutUs" Style="text-transform: uppercase;">o nas</MudLink>
                    <MudLink Href="/#sectionServices" Style="text-transform: uppercase;">usługi</MudLink>
                    <MudLink Href="/#sectionProgram" Style="text-transform: uppercase;">program</MudLink>
                    <MudLink Href="/#sectionOpinions" Style="text-transform: uppercase;">opinie</MudLink>
                    <MudLink Href="/#sectionQ&A" Style="text-transform: uppercase;">Q&A</MudLink>
                    <MudLink Href="/#sectionQ&A" Style="text-transform: uppercase;">kontakt</MudLink>
                    <MudLink Href="/login" Style="text-transform: uppercase;">logowanie</MudLink>



                    <!--to powinno byc dopieo po zalogowaniu-->
                    <MudMenu Label="Moje konto" Dense="true">
                        <MudMenuItem>
                            <MudNavLink Href="/myDiet">Moja dieta</MudNavLink>
                        </MudMenuItem>
                        <MudMenuItem>
                            <MudNavLink Href="/clientHomePage">Uzupełnij ilość wypitej wody</MudNavLink><!--dodać scieżę-->
                        </MudMenuItem>
                        <MudMenuItem>
                            <MudNavLink Href="/allClientDiets-Client">Diety</MudNavLink>
                        </MudMenuItem>
                        <MudMenuItem>
                            <MudNavLink Href="/caloryCount">Oblicz zapotrzebowanie kaloryczne</MudNavLink>
                        </MudMenuItem>
                        <MudMenuItem>
                            <MudNavLink Href="/raport">Raport</MudNavLink>
                        </MudMenuItem>
                        <MudMenuItem>
                            <MudNavLink Href="/informationAboutPersonalData">Moje dane</MudNavLink>
                        </MudMenuItem>
                        <AuthorizeView Roles="Employee"><!--po zalogowaniu i tylko dla pracownika-przetestować-->
                        <Authorized>
                        <MudMenuItem>
                            <MudNavLink Href="/employee">Panel pracownika</MudNavLink>
                        </MudMenuItem>
                        </Authorized>
                        </AuthorizeView>
                    </MudMenu>
                    
                    

                </MudStack>
            </MudPaper>


        </MudDrawer>
    </MudAppBar>
</MudLayout>


    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>



<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>



    @code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = false;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }


    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };

}